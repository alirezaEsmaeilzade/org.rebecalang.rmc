
reactiveclass Airport(2){
	knownrebecs{
		Plane p1;
		Plane p2;
	}
	statevars{
		int id ;
		int runway;
		int safe;
		int emptyParking;
	}
	Airport(int i ,int r){
		id = i;
		runway = r;
		safe = 1;
		emptyParking = 0;
	}	
	msgsrv watchtower(int planeid ,int situation){
		if(planeid == 1){
			if(situation == 0){
				p1.takingRunway();
			}
			if(situation == 1){
				if(runway > 0){
					runway = runway - 1;
					emptyParking = emptyParking + 1;
					p1.readyToTakeoff();
				}else{
					p1.takingRunway();
				}
			}
			if(situation == 2 || situation == 3){
				assertion(false);		
				if(safe>0){
					safe = safe - 1;
					p1.takeoff();
				}else{
					p1.readyToTakeoffNow();
				}
			}

		}
		if(planeid == 2){
			if(situation == 0){
				p2.takingRunway();
			}
			if(situation == 1){
				if(runway > 0){
					runway = runway - 1;
					emptyParking = emptyParking + 1;
					p2.readyToTakeoff();
				}else{
					p2.takingRunway();
				}
			}
			if(situation == 2 || situation == 3){
				assertion(false);
				if(safe>0){
					safe = safe - 1;
					p2.takeoff();
				}else{
					p2.readyToTakeoffNow();
				}
			}

		}

	}

}

reactiveclass Plane(1){
	knownrebecs{
	 Airport a1;
	 Airport a2;
	}
	
	statevars{
	 int airportid;
	 int planeid;
	 int fuel;
	 int situation;
	}
	 
	Plane(int a ,int p){
		airportid = a;
		planeid = p;
		fuel = 0;
		self.parking();
	}	
	msgsrv parking(){
		situation = 0;
		delay(3);
		fuel = 5;
		if(airportid == 1){
			a1.watchtower(planeid ,situation);
		}
		if(airportid == 2){
			a2.watchtower(planeid ,situation);
		}
	}
	msgsrv takingRunway(){
		situation = 1;
		if(airportid == 1){
			a1.watchtower(planeid ,situation);
		}
		if(airportid == 2){
			a2.watchtower(planeid ,situation);
		}	
	}
	msgsrv readyToTakeoff(){
		situation = 2;
		delay(1);
		if(airportid == 1){
			//assertion(false);
			a1.watchtower(planeid ,situation);
		}
		if(airportid == 2){
			//assertion(false);
			a2.watchtower(planeid ,situation);
		}
	}
	msgsrv readyToTakeoffNow(){
		situation = 3;
		if(airportid == 1){
			a1.watchtower(planeid ,situation);
		}
		if(airportid == 2){
			a2.watchtower(planeid ,situation);
		}		
	}
	msgsrv takeoff(){
		situation = 4;

		if(airportid == 1){
			self.parking();
		}
		if(airportid == 2){
			self.parking();
		}		
	}

}
main{
	Airport a1(p1 ,p2):(1,1);
	Airport a2(p1 ,p2):(2,1);	
	Plane p1(a1 ,a2):(1,1);
	Plane p2(a1 ,a2):(1,2);

	
}